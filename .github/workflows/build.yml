name: Generate PDFs and build Docusaurus

on:
  push:
    branches:
      - master

jobs:
  generate-pdfs:
    runs-on: ubuntu-20.04
    container:
      image: docker://pandoc/latex:2.9
      options: --entrypoint=sh
    steps:
      - uses: actions/checkout@v2
      - name: install titling
        run: |
          tlmgr install titling
      - name: install font
        run: |
          tlmgr install libertine && updmap-sys --enable Map=libertine.map
      - name: prepare output directories
        run: |
          for d in reconstructions/*/; do
            mkdir -p pdfs/$d
          done
      # - name: prepare en output directories
      #   run: |
      #     for d in ./i18n/en/docusaurus-plugin-content-blog/*/; do
      #       mkdir -p pdfs/en/$d
      #     done
      - name: copy german files into tmp folder
        run: |
          cp -R ./reconstructions/. tmp-pandoc/
      # - name: copy english files into tmp folder
      #   run: |
      #     cp -R ./i18n/en/docusaurus-plugin-content-blog/. tmp-pandoc/en/
      - name: replace authors with author in tmp files
        run: |
          find ./tmp-pandoc/ -type f -exec perl -i -w -0777pe 's/---.*\Kauthors:(?=.*---)/author:/s' {} +
      - name: convert md to pdf
        run: |
          (cd ./tmp-pandoc && find *  -iname '*.md' -type f -exec sh -c 'pandoc ${0} -o ../pdfs/${0%.md}.pdf --metadata-file=../pdf-styles/meta_aao-latex.yaml  --template=../pdf-styles/argonl_latex.template --pdf-engine=lualatex --lua-filter=../pdf-styles/inferenceline.lua' {} \;)
      - uses: actions/upload-artifact@master
        with:
          name: pdfs
          path: pdfs
          retention-days: 1
  build-and-deploy:
    needs: generate-pdfs
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: Install dependencies & build
        run: |
          yarn install --frozen-lockfile
          yarn run build

      - uses: actions/download-artifact@master
        with:
          name: pdfs
          path: build/pdfs

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./build
          github_token: ${{ secrets.GITHUB_TOKEN }}
